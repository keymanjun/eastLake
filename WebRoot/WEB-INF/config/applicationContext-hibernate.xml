<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 

<bean id="propertyConfigurer"
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>WEB-INF/jdbc.properties</value>
		</list>
	</property>
</bean>


<!--bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
   <property name="configLocation"> 
     <value>classpath:ehcache.xml</value> 
   </property>
</bean-->


<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
	<property name="driverClass">
		<value>${datasource.driverClassName}</value>
	</property>
	<property name="jdbcUrl">
		<value>${datasource.url}</value>
	</property>
	<property name="user">
		<value>${datasource.username}</value>
	</property>
	<property name="password">
		<value>${datasource.password}</value>
	</property>
	<property name="acquireIncrement">
		<value>${c3p0.acquireIncrement}</value>
	</property>
	<property name="initialPoolSize">
		<value>${c3p0.initialPoolSize}</value>
	</property>
	<property name="minPoolSize">
		<value>${c3p0.minPoolSize}</value>
	</property>
	<property name="maxPoolSize">
		<value>${c3p0.maxPoolSize}</value>
	</property>
	<property name="maxIdleTime">
		<value>${c3p0.maxIdleTime}</value>
	</property>
	<property name="idleConnectionTestPeriod">
		<value>${c3p0.idleConnectionTestPeriod}</value>
	</property>
	<property name="maxStatements">
		<value>${c3p0.maxStatements}</value>
	</property>
	<property name="numHelperThreads">
		<value>${c3p0.numHelperThreads}</value>
	</property>
</bean>

<bean id="sessionFactory"	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource">
		<ref local="dataSource" />
	</property>
	<property name="mappingResources">
		<list>
      <value>com/system/entity/hbm/SysLog.hbm.xml</value>
			<value>com/system/entity/hbm/SysUser.hbm.xml</value>
			<value>com/system/entity/hbm/SysRole.hbm.xml</value>
			<value>com/system/entity/hbm/SysMenu.hbm.xml</value>
			<value>com/system/entity/hbm/SysRoleMenu.hbm.xml</value>
			<value>com/system/entity/hbm/SysUserRole.hbm.xml</value>			
			<value>com/system/entity/hbm/VUserRole.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollStudent.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollGenerateExamNo.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollMajor.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollMajorItem.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollMajorScore.hbm.xml</value>
			<value>com/application/entity/hbm/EnrollDicInfo.hbm.xml</value>
			
		</list>
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
			<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			
			<!-- 最大抓取深度 -->  
        <prop key="hibernate.max_fetch_depth">1</prop>
        <!-- 更新方式创建库表  
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        --> 
        <!-- 格式SQL -->  
        <prop key="hibernate.format_sql">true</prop>
        
        <!-- 使用二级缓存 
        <prop key="hibernate.cache.use_query_cache">true</prop>
        
        <prop key="hibernate.cache.use_second_level_cache">true</prop>    
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
        
        -->
        
        <!--prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop-->		
        
				<!--prop key="hibernate.generate_statistics">true</prop-->	
			<!--		
      <prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}</prop>
      <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
      -->
		</props>
	</property>
	<!--property name="eventListeners">
		<map>
		<entry key="merge">
		<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
		</entry>
		</map>
  </property-->
</bean>

 <!--bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
      <property name="sessionFactory" ref="sessionFactory" />
      <property name="cacheQueries" value="${hibernate.cache.use_query_cache}"></property>
 </bean-->

<bean id="hbm3Dao" class="com.framework.db.springhibernate3.GenericDao">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
</bean>


<bean id="transactionManager"	class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
</bean>

<bean id="hibernateTxProxy" lazy-init="false" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
    <property name="transactionManager"><ref bean="transactionManager"/></property> 
    <property name="transactionAttributes">
        <props>
        		<prop key="insert*">PROPAGATION_REQUIRED</prop>
						<prop key="update*">PROPAGATION_REQUIRED</prop>
						<prop key="save*">PROPAGATION_REQUIRED</prop>
						<prop key="add*">PROPAGATION_REQUIRED</prop>
						<prop key="remove*">PROPAGATION_REQUIRED</prop>
						<prop key="del*">PROPAGATION_REQUIRED</prop>
						<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
						<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
						<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
						<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
        </props> 
    </property> 
	  <property name="target"><bean class="com.framework.base.BaseService" autowire="byName"/></property>
</bean>

</beans>
